## 持续集成
version: '3'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

services:
  ### PostgreSQL ###########################################
  postgres:
    build:
      context: ./postgres
      args:
        - POSTGRES_VERSION=alpine
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=test
      - POSTGRES_USER=workdock
      - POSTGRES_PASSWORD=workdock
      - GITLAB_POSTGRES_INIT=true
      - GITLAB_POSTGRES_USER=workdock
      - GITLAB_POSTGRES_PASSWORD=workdock
      - GITLAB_POSTGRES_DB=workdock_gitlab
    networks:
      - backend

  ### Gitlab ################################################
  gitlab:
    build:
      context: ./gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.pingink.local'
        redis['enable'] = false
        nginx['listen_https'] = false
        nginx['listen_port'] = 80
        nginx['custom_gitlab_server_config'] = "set_real_ip_from 172.0.0.0/8;\nreal_ip_header X-Real-IP;\nreal_ip_recursive on;"
        postgresql['enable'] = false
        gitlab_rails['trusted_proxies'] = ['caddy','nginx','apache2']
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_database'] = 8
        gitlab_rails['db_host'] = 'postgres'
        gitlab_rails['db_username'] = 'workdock'
        gitlab_rails['db_password'] = 'workdock'
        gitlab_rails['db_database'] = 'workdock_gitlab'
        gitlab_rails['initial_root_password'] = 'workdock'
        gitlab_rails['gitlab_shell_ssh_port'] = 2289
    volumes:
      - ./gitlab/config:/etc/gitlab
      - ./gitlab/data:/var/opt/gitlab
      - ./gitlab/log:/var/log/gitlab
    ports:
      - "8090:80"
      - "4443:443"
      - "2222:22"
    networks:
      - backend
    depends_on:
      - postgres
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    environment:
      - CI_SERVER_URL=http://localhost:8989
      - REGISTRATION_TOKEN=workdock
      - RUNNER_NAME=workdock-runner
      - REGISTER_NON_INTERACTIVE=true
      - RUNNER_EXECUTOR=shell
    volumes:
      - ./gitlab/runner:/etc/gitlab-runner
      - ./gitlab/runner/run/docker.sock:/var/run/docker.sock:rw

  ### SONARQUBE ################################################
  sonarqube:
    build:
      context: ./sonarqube
    hostname: "sonar.pingink.local"
    volumes:
      - ./sonarqube/conf:/opt/sonarqube/conf
      - ./sonarqube/data:/opt/sonarqube/data
      - ./sonarqube/logs:/opt/sonarqube/logs
      - ./sonarqube/extensions:/opt/sonarqube/extensions
      - ./sonarqube/plugins:/opt/sonarqube/lib/bundled-plugins
    ports:
      - 9900:9000
    depends_on:
      - postgres
    environment:
      - sonar.jdbc.username=workdock
      - sonar.jdbc.password=workdock
      - sonar.jdbc.url=jdbc:postgresql://postgres:5432/workdock_sonarqube
    networks:
      - backend
      - frontend
